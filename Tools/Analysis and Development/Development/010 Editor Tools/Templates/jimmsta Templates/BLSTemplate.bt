struct BLSHeader {/*0x00*/	char magix[4];/*0x04*/	uint32 version;/*0x08*/	uint32 permutationCount;} header;string show_bitmask (DWORD d){    string s="";    int i;    for (i = 0; i < 31; i++)    {        SPrintf (s, "%d%s", (d >> i) & 1, s);        if (i%8 == 7) SPrintf(s, " %s", s);     }    SPrintf (s, "%s: %d", s, d);    return s;}struct BLSBlock {/*0x00*/	DWORD flags0 <read=show_bitmask>;/*0x04*/	DWORD flags4 <read=show_bitmask>;/*0x08*/	DWORD unk8 <read=show_bitmask>;	/*0x0C*/	uint32 size<hidden=true>;/*0x10*/	char data[size];            char padding[(4-size%4)%4]<hidden=true>;} blocks[header.permutationCount]<optimize=false>;